--CREATE TABLE
CREATE TABLE DONORS(
DONOR_ID NUMBER PRIMARY KEY,
NAME VARCHAR2(50) NOT NULL,
SURNAME VARCHAR2(50) NOT NULL,
AGE NUMBER NOT NULL,
BLOOD_GROUP VARCHAR2(10) NOT NULL,
BLOOD_DISEASE VARCHAR2(10) CONSTRAINT BLOOD_DISEASE_CH CHECK (BLOOD_DISEASE IN ('TRUE', 'FALSE'))
);

CREATE TABLE RECIPIENTS(
RECIPIENT_ID NUMBER PRIMARY KEY,
NAME VARCHAR2(50) NOT NULL,
SURNAME VARCHAR2(50) NOT NULL,
AGE NUMBER NOT NULL,
BLOOD_GROUP VARCHAR2(10) NOT NULL
);

CREATE TABLE BLOODBANK(
BLOODBANK_ID NUMBER PRIMARY KEY,
AVAILABLE_BLOOD_GROUP VARCHAR2(10),
QUANTITY NUMBER
);

CREATE TABLE BLOODQUANTITY (
    SAMPLE_ID NUMBER PRIMARY KEY,
    BLOODBANK_ID NUMBER,
    CONTAMINATED VARCHAR2(10) CONSTRAINT CONTAMINATED_CH CHECK (CONTAMINATED IN ('TRUE', 'FALSE')),
    FOREIGN KEY (BLOODBANK_ID) REFERENCES BLOODBANK(BLOODBANK_ID)
);

CREATE TABLE HOSPITALREQUESTS(
REQUEST_ID NUMBER PRIMARY KEY,
HOSPITAL_NAME VARCHAR2(50) NOT NULL,
REQUESTED_BLOOD_GROUP VARCHAR2(10) NOT NULL,
REQUESTED_BLOOD_QUANTITY NUMBER NOT NULL
);

--INSERT DATA
-- Example data for the DONORS table
INSERT INTO DONORS VALUES (1, 'Alice', 'Smith', 30, 'O+', 'TRUE');
INSERT INTO DONORS VALUES (2, 'Bob', 'Johnson', 28, 'B-', 'FALSE');
INSERT INTO DONORS VALUES (3, 'Charlie', 'Williams', 35, 'A+', 'FALSE');
INSERT INTO DONORS VALUES (4, 'David', 'Brown', 22, 'AB+', 'TRUE');
INSERT INTO DONORS VALUES (5, 'Eva', 'Jones', 40, 'O-', 'TRUE');
INSERT INTO DONORS VALUES (6, 'Frank', 'Davis', 26, 'A-', 'FALSE');
INSERT INTO DONORS VALUES (7, 'Grace', 'Miller', 33, 'B+', 'TRUE');
INSERT INTO DONORS VALUES (8, 'Henry', 'Taylor', 29, 'AB-', 'FALSE');
INSERT INTO DONORS VALUES (9, 'Ivy', 'Wilson', 36, 'O+', 'FALSE');
INSERT INTO DONORS VALUES (10, 'Jack', 'Moore', 31, 'B+', 'TRUE');

-- Example data for the RECIPIENTS table
INSERT INTO RECIPIENTS VALUES (1, 'Olivia', 'Smith', 25, 'A+');
INSERT INTO RECIPIENTS VALUES (2, 'Liam', 'Johnson', 30, 'B-');
INSERT INTO RECIPIENTS VALUES (3, 'Emma', 'Williams', 28, 'O+');
INSERT INTO RECIPIENTS VALUES (4, 'Noah', 'Brown', 35, 'AB+');
INSERT INTO RECIPIENTS VALUES (5, 'Ava', 'Jones', 22, 'O-');
INSERT INTO RECIPIENTS VALUES (6, 'Oliver', 'Davis', 40, 'A-');
INSERT INTO RECIPIENTS VALUES (7, 'Sophia', 'Miller', 26, 'B+');
INSERT INTO RECIPIENTS VALUES (8, 'Jackson', 'Taylor', 33, 'AB-');
INSERT INTO RECIPIENTS VALUES (9, 'Isabella', 'Wilson', 29, 'O+');
INSERT INTO RECIPIENTS VALUES (10, 'Ethan', 'Moore', 36, 'B+');

-- Example data for the BLOODBANK table
INSERT INTO BLOODBANK VALUES (1, 'A+', 100);
INSERT INTO BLOODBANK VALUES (2, 'B-', 75);
INSERT INTO BLOODBANK VALUES (3, 'O+', 120);
INSERT INTO BLOODBANK VALUES (4, 'AB+', 50);
INSERT INTO BLOODBANK VALUES (5, 'O-', 90);
INSERT INTO BLOODBANK VALUES (6, 'A-', 60);
INSERT INTO BLOODBANK VALUES (7, 'B+', 80);
INSERT INTO BLOODBANK VALUES (8, 'AB-', 40);
INSERT INTO BLOODBANK VALUES (9, 'A+', 110);
INSERT INTO BLOODBANK VALUES (10, 'B+', 95);

-- Example data for the BLOODQUANTITY table
INSERT INTO BLOODQUANTITY VALUES (1, 1, 'TRUE');
INSERT INTO BLOODQUANTITY VALUES (2, 2, 'FALSE');
INSERT INTO BLOODQUANTITY VALUES (3, 3, 'TRUE');
INSERT INTO BLOODQUANTITY VALUES (4, 4, 'FALSE');
INSERT INTO BLOODQUANTITY VALUES (5, 5, 'TRUE');
INSERT INTO BLOODQUANTITY VALUES (6, 6, 'FALSE');
INSERT INTO BLOODQUANTITY VALUES (7, 7, 'TRUE');
INSERT INTO BLOODQUANTITY VALUES (8, 8, 'FALSE');
INSERT INTO BLOODQUANTITY VALUES (9, 9, 'TRUE');
INSERT INTO BLOODQUANTITY VALUES (10, 10, 'FALSE');

-- Example data for the HOSPITALREQUESTS table
INSERT INTO HOSPITALREQUESTS VALUES (1, 'City Hospital', 'A+', 20);
INSERT INTO HOSPITALREQUESTS VALUES (2, 'General Medical Center', 'B-', 15);
INSERT INTO HOSPITALREQUESTS VALUES (3, 'Community Health Clinic', 'O+', 30);
INSERT INTO HOSPITALREQUESTS VALUES (4, 'Regional Hospital', 'AB+', 25);
INSERT INTO HOSPITALREQUESTS VALUES (5, 'Emergency Care Center', 'O-', 18);
INSERT INTO HOSPITALREQUESTS VALUES (6, 'Childrens Hospital', 'A-', 12);
INSERT INTO HOSPITALREQUESTS VALUES (7, 'University Medical Center', 'B+', 22);
INSERT INTO HOSPITALREQUESTS VALUES (8, 'Veterans Affairs Hospital', 'AB-', 10);
INSERT INTO HOSPITALREQUESTS VALUES (9, 'City Medical Clinic', 'A+', 28);
INSERT INTO HOSPITALREQUESTS VALUES (10, 'National Cancer Institute', 'B+', 35);

--Is there sufficient blood available at the blood bank?
SELECT AVAILABLE_BLOOD_GROUP, QUANTITY
FROM BLOODBANK;

--Does the donor have any blood-borne diseases?
SELECT NAME, BLOOD_DISEASE
FROM DONORS;

--Retrieve all donors' names and blood groups who are willing to donate blood (without blood-borne diseases).
SELECT NAME, BLOOD_GROUP
FROM DONORS
WHERE BLOOD_DISEASE = 'FALSE';

--Find the total quantity of available blood in the blood bank for each blood group.
SELECT AVAILABLE_BLOOD_GROUP, SUM(QUANTITY) AS TOTAL_QUANTITY
FROM BLOODBANK
GROUP BY AVAILABLE_BLOOD_GROUP;

--List the names of recipients along with their requested blood groups.
SELECT NAME, BLOOD_GROUP
FROM RECIPIENTS;

--Identify donors with age greater than 30 who have donated contaminated blood.
SELECT NAME, AGE
FROM DONORS
WHERE AGE > 30 AND BLOOD_DISEASE = 'TRUE';

--Retrieve the hospital names and the total quantity of blood requested by each hospital.
SELECT HOSPITAL_NAME, SUM(REQUESTED_BLOOD_QUANTITY) AS TOTAL_REQUESTED_QUANTITY
FROM HOSPITALREQUESTS
GROUP BY HOSPITAL_NAME;

--List donors' names and ages for those with blood groups 'A+' or 'B+'.
SELECT NAME, AGE
FROM DONORS
WHERE BLOOD_GROUP IN ('A+', 'B+');

--Retrieve the blood banks with an available quantity greater than 80 units.
SELECT BLOODBANK_ID, AVAILABLE_BLOOD_GROUP, QUANTITY
FROM BLOODBANK
WHERE QUANTITY > 80;

--List donors along with their blood groups and indicate if they have any blood-borne diseases using a CASE statement.
SELECT NAME, BLOOD_GROUP,
       CASE 
          WHEN BLOOD_DISEASE = 'TRUE' THEN 'YES'
          ELSE 'NO'
       END AS "HAS BLOOD DISEASE"
   FROM DONORS;

--Retrieve the total quantity of each blood group in the blood bank and display only those with a total quantity greater than 100 units.
SELECT AVAILABLE_BLOOD_GROUP, SUM(QUANTITY) AS TOTAL_QUANTITY
FROM BLOODBANK
GROUP BY AVAILABLE_BLOOD_GROUP
HAVING SUM(QUANTITY) > 100;

--List donors' names and blood groups along with the corresponding blood bank information (if available). 
SELECT D.NAME, D.BLOOD_GROUP, B.BLOODBANK_ID, B.AVAILABLE_BLOOD_GROUP, B.QUANTITY
FROM DONORS D
LEFT JOIN BLOODQUANTITY BQ ON D.DONOR_ID = BQ.SAMPLE_ID
LEFT JOIN BLOODBANK B ON BQ.BLOODBANK_ID = B.BLOODBANK_ID;

--Create a report indicating the total quantity of blood available for each blood group, and categorize them as 'Low', 'Medium', or 'High' based on the quantity using a CASE statement.
SELECT AVAILABLE_BLOOD_GROUP,
       SUM(QUANTITY) AS TOTAL_QUANTITY,
       CASE 
          WHEN SUM(QUANTITY) < 50 THEN 'Low'
          WHEN SUM(QUANTITY) >= 50 AND SUM(QUANTITY) <= 100 THEN 'Medium'
          ELSE 'High'
       END AS QUANTITY_CATEGORY
FROM BLOODBANK
GROUP BY AVAILABLE_BLOOD_GROUP;
